David Lin, davilin, 110044921, Score: 38/100
Homework 3 - Dynamic Memory Allocator

Compilation Tests (5/5)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/0     Check for illegal functions                                     ✔              EXIT_SUCCESS                             Checking files src/sfmm.c for illegal functions
### No illegal functions found
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/5     Compilation with -Wall -Werror                                  ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Basic Tests (14/30)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/2     Malloc an Integer                                               ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/2     Malloc an assign an Integer value                               ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/2     Malloc a second value & assign                                  ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/2     Check integer value is still correct                            ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/2     Free block and check header/footer values                       ✔                                                       ERROR: Allocated bit in footer not 0. Alloc: 1
ERROR: Block Size in header does not match footer. Header: 0 Footer: 4096
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/2     Allocate a large block                                          ✔                                                       ERROR: Allocated bit in header not 1. Alloc: 0
ERROR: Block Size in header is not correct (9024). Block Size: 0 
ERROR: Requested Size in header is not correct (9000). Requested Size: 0
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/1     Block Size Check: char                                          ✔                                                       ERROR: Block Size in header is not 32 and/or multiple of 16. Block Size: 0
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/1     Block Size Check: short                                         ✔                                                       ERROR: Block Size in header is not 32 and/or multiple of 16. Block Size: 0
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/1     Block Size Check: int                                           ✔                                                       ERROR: Block Size in header is not 32 and/or multiple of 16. Block Size: 0
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/1     Block Size Check: double                                        ✔                                                       ERROR: Block Size in header is not 32 and/or multiple of 16. Block Size: 0
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/1     Block Size Check: long double                                   ✔                                                       ERROR: Block Size in header is not 32 and/or multiple of 16. Block Size: 0
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/1     Block Size Check: struct of 7737 bytes                          ✔                                                       ERROR: Block Size in header is not 7760 and/or multiple of 16. Block Size: 0
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/3     Malloc for more memory than initialized                         ✘              SIGSEGV                                  Segmentation fault (core dumped)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/2     Malloc for more memory than 4GB                                 ✘              SIGSEGV                                  Segmentation fault (core dumped)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/4     external fragmentation. sf_sbrk for more space                  ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/3     Check next and prev pointers of free block at head of list      ✔                                                       ERROR: Free block is not at the head of the free list.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Managing Memory (0/5)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     Managing Memory?  No sbrk in small sizes or per request         ✔                                                       ERROR: sbrk moved to obtain more space when not needed. before: 0x7f66f52c2010, after: 0x7f66f52c6018
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Calloc and Realloc (3/15)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/3     callocTest                                                      ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/2     realloc to size 0, expect NULL                                  ✘              SIGSEGV                                  Segmentation fault (core dumped)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     realloc to smaller size                                         ✘              SIGSEGV                                  Segmentation fault (core dumped)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     realloc to larger size                                          ✘              SIGSEGV                                  Segmentation fault (core dumped)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

List Management and Block Placement (0/20)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     LIFO & FIRST                                                    ✔                                                       ERROR: First allocation. sf_malloc(970) placed in wrong position.
ERROR: Second allocation. sf_malloc(64) placed in wrong position.
Expected free list sizes: LIFO: (80) -> (528) -> (1040) -> (32) -> (32) -> FREE (~48 bytes) -> NULL
Your initial free list:
[1;34mSnapshot[0m: Explicit 8 49160
[0;33m# 2016-03-23 11:05
[0m0x7f8c92f69018 4096
First allocation of sf_malloc(970)
After first allocation of sf_malloc(970)
[1;34mSnapshot[0m: Explicit 8 53256
[0;33m# 2016-03-23 11:05
[0m0x7f8c92f6a018 4096
Second allocation of sf_malloc(64)
After second allocation of sf_malloc(64)
[1;34mSnapshot[0m: Explicit 8 57352
[0;33m# 2016-03-23 11:05
[0m0x7f8c92f6b018 4096
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     LIFO & NEXT                                                     ✔                                                       ERROR: First allocation. sf_malloc(970) placed in wrong position.
ERROR: Second allocation. sf_malloc(64) placed in wrong position.
Expected free list sizes: LIFO: (80) -> (528) -> (1040) -> (32) -> (32) -> FREE (~48 bytes) -> NULL
Your initial free list:
[1;34mSnapshot[0m: Explicit 8 49160
[0;33m# 2016-03-23 11:05
[0m0x7f9579c0a018 4096
First allocation of sf_malloc(970)
After first allocation of sf_malloc(970)
[1;34mSnapshot[0m: Explicit 8 53256
[0;33m# 2016-03-23 11:05
[0m0x7f9579c0b018 4096
Second allocation of sf_malloc(64)
After second allocation of sf_malloc(64)
[1;34mSnapshot[0m: Explicit 8 57352
[0;33m# 2016-03-23 11:05
[0m0x7f9579c0c018 4096
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     ADDR & FIRST                                                    ✔                                                       ERROR: First allocation. sf_malloc(970) placed in wrong position.
ERROR: Second allocation. sf_malloc(64) placed in wrong position.
Expected free list sizes: ADDR: (32) -> (80) -> (32) -> (1040) -> (528) -> FREE (~48 bytes)-> NULL
Your initial free list:
[1;34mSnapshot[0m: Explicit 8 49160
[0;33m# 2016-03-23 11:05
[0m0x7f973a7fd018 4096
First allocation of sf_malloc(970)
After first allocation of sf_malloc(970)
[1;34mSnapshot[0m: Explicit 8 53256
[0;33m# 2016-03-23 11:05
[0m0x7f973a7fe018 4096
Second allocation of sf_malloc(64)
After second allocation of sf_malloc(64)
[1;34mSnapshot[0m: Explicit 8 57352
[0;33m# 2016-03-23 11:05
[0m0x7f973a7ff018 4096
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     ADDR & NEXT                                                     ✔                                                       ERROR: First allocation. sf_malloc(970) placed in wrong position.
ERROR: Second allocation. sf_malloc(64) placed in wrong position.
Expected free list sizes: ADDR: (32) -> (80) -> (32) -> (1040) -> (528) -> FREE (~48 bytes)-> NULL
Your initial free list:
[1;34mSnapshot[0m: Explicit 8 49160
[0;33m# 2016-03-23 11:05
[0m0x7fbab6e43018 4096
First allocation of sf_malloc(970)
After first allocation of sf_malloc(970)
[1;34mSnapshot[0m: Explicit 8 53256
[0;33m# 2016-03-23 11:05
[0m0x7fbab6e44018 4096
Second allocation of sf_malloc(64)
After second allocation of sf_malloc(64)
[1;34mSnapshot[0m: Explicit 8 57352
[0;33m# 2016-03-23 11:05
[0m0x7fbab6e45018 4096
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Coalescing (6/15)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/3     Coalesce Case 1: no coalescing                                  ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/3     Coalesce Case 2: Free block before                              ✔                                                       INFO: Block size of m2 block was: 4096
INFO: Block size of m3 block was: 4096
ERROR: Block size of coalesed block (m2 + m3) does not match expected!! Yours: 4096  Expected: 8192
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/3     Coalesce case 3: Free after                                     ✔                                                       INFO: Block size of m2 block was: 4096
INFO: Block size of m3 block was: 4096
ERROR: Block size of coalesed block (m2 + m3) does not match expected!! Yours: 4096  Expected: 8192
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/3     Coalesce case 4: free before and after                          ✔                                                       ERROR: Block size of freed block does not match expected!! Yours: 4096  Expected: 12288
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/3     Coalesce edge case 1: Do not coalesce before start of heap      ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Stress Test (10/10)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10/10   Stress test                                                     ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

